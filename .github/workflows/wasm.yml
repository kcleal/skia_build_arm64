name: Build Skia WASM

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Skia WASM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build python3

      - name: Install Emscripten
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          source ./emsdk_env.sh
          echo "EMSDK=$GITHUB_WORKSPACE/emsdk" >> $GITHUB_ENV
          echo "EMSDK_NODE=$GITHUB_WORKSPACE/emsdk/node/16.20.0_64bit/bin/node" >> $GITHUB_ENV
          echo "$GITHUB_WORKSPACE/emsdk/upstream/emscripten" >> $GITHUB_PATH

      - name: Set up environment variables
        run: |
          echo "SKIA_OUTPUT_PATH=$GITHUB_WORKSPACE/lib/skia" >> $GITHUB_ENV
          mkdir -p $GITHUB_WORKSPACE/lib/skia
          mkdir -p $GITHUB_WORKSPACE/build_skia && cd $GITHUB_WORKSPACE/build_skia

      - name: Clone depot_tools and Skia
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH="$GITHUB_WORKSPACE/depot_tools:$PATH"
          cd $GITHUB_WORKSPACE
          depot_tools/fetch skia

      - name: Build Skia
        run: |
          cd $GITHUB_WORKSPACE/skia
          git checkout origin/chrome/m133
          python3 tools/git-sync-deps
          cd modules/canvaskit
          bash compile.sh
          make release
          ls

      - name: Copy and Package Build Artifacts
        run: |
          NAME=${GITHUB_WORKSPACE}/lib/skia
          
          ls $GITHUB_WORKSPACE/skia
          echo "-"
          ls $GITHUB_WORKSPACE/skia/out 
          echo "-"
          ls $GITHUB_WORKSPACE/skia/out/Release
          echo
          
          mkdir -p ${NAME}/out/Release
          
          cp -rf $GITHUB_WORKSPACE/skia/out/canvaskit_wasm/* ${NAME}/out/Release
          cp -rf $GITHUB_WORKSPACE/skia/include ${NAME}
          cp -rf $GITHUB_WORKSPACE/skia/modules ${NAME}
          
          # Clean up
          rm -rf ${NAME}/out/Release/obj
          rm -rf ${NAME}/out/Release/gen
          
          rm -rf ${NAME}/modules/audioplayer
           
          find . -type f -name "*.clang-format" -delete
          find . -type f -name "*.gitignore" -delete
          find . -type f -name "*.md" -delete
          find . -type f -name "*.gn" -delete
          find . -type f -name "*.ninja" -delete
          find . -type f -name "*.cpp" -delete
          find . -type f -name "*.ninja.d" -delete
          find . -type f -name "*BUILD*" -delete
          find . -type f -name "*.txt" -delete
          find . -type d -name "test*" -exec rm -rf {} +
          
          cd ${NAME}
          tar -czf ../skia-m133-wasm.tar.gz *
          ls -lh ../skia-m133-wasm.tar.gz

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wasm
          path: ${{ github.workspace }}/lib/skia-m133-wasm.tar.gz
