name: Build Skia macOS x86_64

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Skia
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-13]
        arch: [x64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew install ninja harfbuzz webp bazelisk

      - name: Set up environment variables
        run: |
          echo "SKIA_OUTPUT_PATH=$GITHUB_WORKSPACE/lib/skia" >> $GITHUB_ENV
          mkdir -p $GITHUB_WORKSPACE/lib/skia
          mkdir -p $GITHUB_WORKSPACE/build_skia && cd $GITHUB_WORKSPACE/build_skia

      - name: Set architecture specific flags
        run: |
          echo "EXTRA_CFLAGS=[\"-mavx2\", \"-mfma\", \"-msse4.2\", \"-mpopcnt\", \"-mf16c\"]" >> $GITHUB_ENV
          echo "EXTRA_LDFLAGS=[\"-mavx2\", \"-mfma\"]" >> $GITHUB_ENV
          echo "EXTRA_ARGS=skia_use_gl=true skia_use_metal=true" >> $GITHUB_ENV
          echo "ARCH=x64" >> $GITHUB_ENV
          echo "OS=Darwin" >> $GITHUB_ENV

      - name: Clone depot_tools and Skia
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH="$GITHUB_WORKSPACE/depot_tools:$PATH"
          cd $GITHUB_WORKSPACE
          depot_tools/fetch skia

      - name: Build Skia
        run: |
          cd $GITHUB_WORKSPACE/skia
          git checkout origin/chrome/m133
          python3 tools/git-sync-deps
          REL=Release
          bin/gn gen out/${REL} --args="is_official_build=true \
              skia_use_system_icu=false \
              skia_use_system_zlib=false \
              skia_use_system_expat=false \
              skia_use_system_libjpeg_turbo=false \
              skia_use_system_libpng=false \
              skia_use_system_libwebp=false \
              skia_use_system_harfbuzz=false \
              skia_pdf_subset_harfbuzz=true \
              skia_enable_skottie=true \
              target_cpu=\"${ARCH}\" \
              extra_cflags=${EXTRA_CFLAGS} \
              extra_ldflags=${EXTRA_LDFLAGS} \
              cc=\"clang\" \
              cxx=\"clang++\" \
              ${EXTRA_ARGS}"
          ninja -C out/${REL}

      - name: Copy and Package Build Artifacts
        run: |
          NAME=${GITHUB_WORKSPACE}/lib/skia
          mkdir -p ${NAME}/out/Release
          mkdir -p ${NAME}/third_party/externals
          
          cp -rf $GITHUB_WORKSPACE/skia/out/Release/* ${NAME}/out/Release
          cp -rf $GITHUB_WORKSPACE/skia/include ${NAME}
          cp -rf $GITHUB_WORKSPACE/skia/modules ${NAME}
          cp -rf $GITHUB_WORKSPACE/skia/src ${NAME}
          
          libs=( "freetype" "harfbuzz" "icu" "libpng" "zlib" )
          
          for l in "${libs[@]}"
          do
            echo "Copying $l..."
            mkdir -p ${NAME}/third_party/externals/${l}
            cp -rf $GITHUB_WORKSPACE/skia/third_party/externals/${l}/src ${NAME}/third_party/externals/${l} || true
            cp -rf $GITHUB_WORKSPACE/skia/third_party/externals/${l}/include ${NAME}/third_party/externals/${l} || true
            cp -rf $GITHUB_WORKSPACE/skia/third_party/externals/${l}/source ${NAME}/third_party/externals/${l} || true
            cp $GITHUB_WORKSPACE/skia/third_party/externals/${l}/*.h ${NAME}/third_party/externals/${l} || true
          done
          
          cp -rf $GITHUB_WORKSPACE/skia/third_party/icu ${NAME}/third_party
          
          # Clean up
          rm -rf ${NAME}/out/Release/obj
          rm -rf ${NAME}/out/Release/gen
          rm -rf ${NAME}/out/Release/*.dat
          rm -rf ${NAME}/out/Release/*.stamp
          
          rm -rf ${NAME}/modules/audioplayer
          
          rm -rf ${NAME}/src
           
          find . -type f -name "*.clang-format" -delete
          find . -type f -name "*.gitignore" -delete
          find . -type f -name "*.md" -delete
          find . -type f -name "*.gn" -delete
          find . -type f -name "*.ninja" -delete
          find . -type f -name "*.cpp" -delete
          find . -type f -name "*.ninja.d" -delete
          find . -type f -name "*BUILD*" -delete
          find . -type f -name "*.txt" -delete
          find . -type d -name "test*" -exec rm -rf {} +
          
          cd ${NAME}
          tar -czf ../skia-m133-macos-Release-x64.tar.gz *
          ls -lh ../skia-m133-macos-Release-x64.tar.gz

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos_x64
          path: ${{ github.workspace }}/lib/skia-m133-macos-Release-x64.tar.gz
